<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hot6.project.dao.StudyInfoDAO">
<select id="studyHomeTotalRecord"  resultType="StudyVO">
		select count(*)
	 	from study_room s join study_type t
		on s.study_type_num = t.study_type_num
		where 1=1
		<if test="sclass!=null">
			and study_type_name in 
			<foreach item="item" collection="sclass" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="stype!=null">
			and is_mentor in
			<foreach item="item" collection="stype" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		
		<!-- order by study_type_name limit ${onePageRecord} offset ${offsetIndex} -->
	</select>
	<select id="studyHome"  resultType="StudyVO">
		SELECT 	is_mentor, s.study_type_num, t.study_type_name, study_img, study_name, 
				host_id, start_date, finish_date, max, study_num, u.user_nick
		
		FROM 	study_room s join study_type t
		ON 		s.study_type_num = t.study_type_num
		JOIN 	user u
		ON		u.user_id = s.host_id
		WHERE 	1=1
		<if test="sclass!=null">
			and study_type_name in 
			<foreach item="item" collection="sclass" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="stype!=null">
			and is_mentor in
			<foreach item="item" collection="stype" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="searchWord!=null">
			and
				(study_name LIKE CONCAT('%', #{searchWord}, '%') || host_id LIKE CONCAT('%', #{searchWord}, '%')
				 || u.user_nick LIKE CONCAT('%', #{searchWord}, '%'))
		</if>
		order by study_type_name limit ${onePageRecord} offset ${offsetIndex}
	</select>
	
	<!-- in_people, remain 출력 -->
	<select id="studyPeople" resultType="StudyVO">
   		select b.* from(
		 select A.study_num, ifnull(G.in_people,0) as in_people, A.max, (A.max -  ifnull(G.in_people,0)) as remain
			from study_room A  
			join (select study_num, COUNT(want_ok) as in_people from study_mate where want_ok='T' group by study_num ) G
		    on G.study_num=A.study_num 
		    where A.study_num=#{param1} ) b where 1=1
		<if test="status!=null and status=='1'">
			and  b.remain >0			 
		</if>
		<if test="status!=null and status=='0'">
			and  b.remain =0			 
		</if>

	</select>
	<!-- contents에 언어 태그 -->
	<select id="studyLang" resultType="String">
		select lt.lang_type_name 
		from study_lang_type st join lang_type lt on st.lang_type_num=lt.lang_type_num and st.study_num=#{param1}
	</select>
	<select id="StudyTag" resultType="string">
		select tag
		from study_hashtag
		where study_num=#{param1}
	</select>
	<!-- 카테고리->언어 드롭다운 메뉴에 언어 -->
	<select id="langAll" resultType="StudyVO">
		select*from lang_type order by lang_type_name
	</select>
	<!-- 좋아요 누르기 -->
	<insert id='LikeUp'>
	    insert reply_like(user_id, reply_num) values (#{param1}, #{param2})
	</insert>
	<!-- 좋아요 취소 -->
	<delete id='LikeDown'>
	   	delete from reply_like 
	   	where user_id=#{param1} and reply_num=#{param2}
	</delete>
	<select id="LikeDetail" resultType="StudyVO">
		SELECT 	 B.user_id, C.study_num,
					COUNT( case when ifnull(C.user_id, 0)= #{param1} then 1 end) AS like_type,
					COUNT(C.user_id) AS like_num
		from	user B
		LEFT JOIN 	study_like C
		ON			B.user_id=C.user_id
		WHERE 		C.study_num = #{param2}
		GROUP BY 	C.study_num;
	</select>
	<!-- 페이징 -->
	<select id="totalRecord" resultType="int">
		SELECT count(*) from study_room 
	</select>
</mapper>